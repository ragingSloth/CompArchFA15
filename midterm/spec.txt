A bikelight is digitally a circuit that given a noisy input from a single button (this document assumes it closes a ciruit when pressed), can provide the driving signal for a light. It is herein assumed that the rails within the digital logic can either support the output's load or drive an amplifier, i.e. if the output of our system is f(t) then the input to the lighting element will be Af(t). The button's output should be conditioned to account for debounce. Additionally a 32,768Hz clock provides the clock signal for all digital logic. The device supports four operational modes, off, on, blink, and dim. On and off are the simplest with the output of the logic section simply being tied to the positive and negative rail respectivly. Dim produces a 256Hz signal with a duty cycle of 50%. Blink produces a 2Hz signal with a duty cycle of 50%. As the button is pressed it progresses through these modes sequentially looping back to the first one after the last. This requires a state machine which provides only an indication of which state it is in, with the proper wraparound (1->2->3->4->1). The state machine progresses one step each time the button is pressed thereby switching the operational mode. Since the two more complicated modes are both square waves at frequencies of powers of two lower than the clock, whose frequency is also a power of two, it is recommended that you generate these signals at all times based on the clock and simply switch the one being supplied to the output. The choice to generate all your signals at all times allows you to use the ouput of the FSM to simply choose which one is supplied to the output at any given time. 